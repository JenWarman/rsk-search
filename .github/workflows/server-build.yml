name: server build/publish

on:
  push:
    branches: [ main, develop ]

  pull_request:
    branches: [ develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.45.2
          working-directory: server
          args: --timeout=5m
  build:
    runs-on: ubuntu-latest
    env:
      working-directory: ./server
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Build
        working-directory: ${{env.working-directory}}
        run: make build

      - name: Test
        working-directory: ${{env.working-directory}}
        run: go test -v ./...

      - name: Generate data
        working-directory: ${{env.working-directory}}
        run: make init.all generate.plaintext generate.zip

      - name: Store binaries
        uses: actions/upload-artifact@v2
        with:
          name: server-binaries
          path: ${{env.working-directory}}/bin

      - name: Store generated data
        uses: actions/upload-artifact@v2
        with:
          name: server-data
          path: ${{env.working-directory}}/var/gen

  publish:
    runs-on: ubuntu-latest
    needs:
      - build
      - lint
    if: ${{ github.ref == 'refs/heads/main' }}
    env:
      working-directory: ./server
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download server binaries
        uses: actions/download-artifact@v2
        with:
          name: server-binaries
          path: ${{env.working-directory}}/bin

      - name: Download generated data
        uses: actions/download-artifact@v2
        with:
          name: server-data
          path: ${{env.working-directory}}/var/gen

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push server
        uses: docker/build-push-action@v2
        with:
          context: ./server
          push: true
          tags: warmans/rsk-search-api:latest
